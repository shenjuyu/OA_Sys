<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sjy.OA_Sys.dao.ChatRecordMapper">
  <resultMap id="BaseResultMap" type="com.sjy.OA_Sys.bean.ChatRecord">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="chat_time_send" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP" />
      <arg column="chat_sender" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="chat_receive" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="is_group" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.sjy.OA_Sys.bean.ChatRecord">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="chat_time_send" javaType="java.sql.Timestamp" jdbcType="TIMESTAMP" />
      <arg column="chat_sender" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="chat_receive" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="is_group" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="message" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, chat_time_send, chat_sender, chat_receive, is_group
  </sql>
  <sql id="Blob_Column_List">
    message
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.sjy.OA_Sys.bean.ChatRecordExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from chat_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.sjy.OA_Sys.bean.ChatRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from chat_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from chat_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from chat_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sjy.OA_Sys.bean.ChatRecordExample">
    delete from chat_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sjy.OA_Sys.bean.ChatRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into chat_record (chat_time_send, chat_sender, chat_receive, 
      is_group, message)
    values (#{chatTimeSend,jdbcType=TIMESTAMP}, #{chatSender,jdbcType=INTEGER}, #{chatReceive,jdbcType=INTEGER}, 
      #{isGroup,jdbcType=INTEGER}, #{message,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sjy.OA_Sys.bean.ChatRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into chat_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="chatTimeSend != null">
        chat_time_send,
      </if>
      <if test="chatSender != null">
        chat_sender,
      </if>
      <if test="chatReceive != null">
        chat_receive,
      </if>
      <if test="isGroup != null">
        is_group,
      </if>
      <if test="message != null">
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="chatTimeSend != null">
        #{chatTimeSend,jdbcType=TIMESTAMP},
      </if>
      <if test="chatSender != null">
        #{chatSender,jdbcType=INTEGER},
      </if>
      <if test="chatReceive != null">
        #{chatReceive,jdbcType=INTEGER},
      </if>
      <if test="isGroup != null">
        #{isGroup,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sjy.OA_Sys.bean.ChatRecordExample" resultType="java.lang.Long">
    select count(*) from chat_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update chat_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.chatTimeSend != null">
        chat_time_send = #{record.chatTimeSend,jdbcType=TIMESTAMP},
      </if>
      <if test="record.chatSender != null">
        chat_sender = #{record.chatSender,jdbcType=INTEGER},
      </if>
      <if test="record.chatReceive != null">
        chat_receive = #{record.chatReceive,jdbcType=INTEGER},
      </if>
      <if test="record.isGroup != null">
        is_group = #{record.isGroup,jdbcType=INTEGER},
      </if>
      <if test="record.message != null">
        message = #{record.message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update chat_record
    set id = #{record.id,jdbcType=INTEGER},
      chat_time_send = #{record.chatTimeSend,jdbcType=TIMESTAMP},
      chat_sender = #{record.chatSender,jdbcType=INTEGER},
      chat_receive = #{record.chatReceive,jdbcType=INTEGER},
      is_group = #{record.isGroup,jdbcType=INTEGER},
      message = #{record.message,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update chat_record
    set id = #{record.id,jdbcType=INTEGER},
      chat_time_send = #{record.chatTimeSend,jdbcType=TIMESTAMP},
      chat_sender = #{record.chatSender,jdbcType=INTEGER},
      chat_receive = #{record.chatReceive,jdbcType=INTEGER},
      is_group = #{record.isGroup,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sjy.OA_Sys.bean.ChatRecord">
    update chat_record
    <set>
      <if test="chatTimeSend != null">
        chat_time_send = #{chatTimeSend,jdbcType=TIMESTAMP},
      </if>
      <if test="chatSender != null">
        chat_sender = #{chatSender,jdbcType=INTEGER},
      </if>
      <if test="chatReceive != null">
        chat_receive = #{chatReceive,jdbcType=INTEGER},
      </if>
      <if test="isGroup != null">
        is_group = #{isGroup,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sjy.OA_Sys.bean.ChatRecord">
    update chat_record
    set chat_time_send = #{chatTimeSend,jdbcType=TIMESTAMP},
      chat_sender = #{chatSender,jdbcType=INTEGER},
      chat_receive = #{chatReceive,jdbcType=INTEGER},
      is_group = #{isGroup,jdbcType=INTEGER},
      message = #{message,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sjy.OA_Sys.bean.ChatRecord">
    update chat_record
    set chat_time_send = #{chatTimeSend,jdbcType=TIMESTAMP},
      chat_sender = #{chatSender,jdbcType=INTEGER},
      chat_receive = #{chatReceive,jdbcType=INTEGER},
      is_group = #{isGroup,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>